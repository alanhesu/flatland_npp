<!--
  Turtlebot navigation simulation:
  - flatland
  - move_base
  - amcl
  - map_server
  - rviz view
 -->
<launch>

  <arg name="laser_topic" default="scan"/> <!-- default laser topic in flatland -->
  <arg name="odom_topic" default="odom"/>
  <arg name="odom_frame_id" default="odom"/>
  <arg name="base_frame_id" default="base"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <!-- Name of the map to use (without path nor extension) and initial position -->
  <arg name="initial_pose_x" default="3.0"/>
  <arg name="initial_pose_y" default="7.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <arg name="min_obstacle_height" default="0.0"/>
  <arg name="max_obstacle_height" default="5.0"/>

  <!--  ******************** flatland********************  -->

  <!--
  You can override these default values:
    roslaunch flatland_Server server.launch world_path:="/some/world.yaml" initial_rate:="30.0"
  -->
  <arg name="world_path"   default="$(find turtlebot_flatland)/maps/hospital_section.world.yaml"/>
  <arg name="update_rate" default="100.0"/>
  <arg name="step_size" default="0.01"/>
  <arg name="viz_pub_rate" default="30.0"/>
  <arg name="show_viz" default="true"/>

  <env name="ROSCONSOLE_FORMAT" value="[${severity} ${time} ${logger}]: ${message}" />

  <param name="use_sim_time" value="true"/>

  <!-- launch flatland server -->
  <node name="flatland_server" pkg="flatland_server" type="flatland_server" output="screen">
    <!-- Use the arguments passed into the launchfile for this node -->
    <param name="world_path" value="$(arg world_path)" />
    <param name="update_rate" value="$(arg update_rate)" />
    <param name="step_size" value="$(arg step_size)" />
    <param name="show_viz" value="$(arg show_viz)" />
    <param name="viz_pub_rate" value="$(arg viz_pub_rate)" />

  </node>

  <!--  ***************** Robot Model *****************  -->
  <node name="spawn_model" pkg="rosservice" type="rosservice"
    args="call --wait /spawn_model &quot;{
      yaml_path: '$(find turtlebot_flatland)/robot/turtlebot.model.yaml',
      name: 'turtlebot0',
      ns: '',
      pose: {x: $(arg initial_pose_x), y: $(arg initial_pose_y), theta: $(arg initial_pose_a)}}&quot;"
    />

  <!-- Command Velocity multiplexer -->
  <!--<node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>-->
  <!--<node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">-->
    <!--<param name="yaml_cfg_file" value="$(find turtlebot3_bringup)/param/mux.yaml"/>-->
    <!--<remap from="cmd_vel_mux/output" to="cmd_vel"/>-->
  <!--</node>-->

  <!-- ****** Maps ***** -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find turtlebot_flatland)/maps/hospital_section.yaml">
   <param name="frame_id" value="$(arg global_frame_id)"/>
  </node>

  <!--  **************** Visualisation ****************  -->
  <group if="$(arg show_viz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_flatland)/rviz/robot_navigation.rviz"/>
  </group>

</launch>
